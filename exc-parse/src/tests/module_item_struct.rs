use crate::{tests::parse_module_for_test, ASTModuleItemKind};

#[tokio::test]
async fn test_module_item_struct() {
    const CONTENT: &'static str = "
    struct foo {}
    struct foo<T> {}
    struct foo<T,> {}
    struct foo<T, U,> {}
    struct foo<T, U,> where T: path::to::interface, {}
    struct foo<T, U,> where T: path::to::interface, U: path::to::interface, {}
    struct foo<T, U,> where T: path::to::interface + path::to::interface, U: path::to::interface + path::to::interface, {}
    struct foo<T, U,> where T: path::to::interface, U: path::to::interface + path::to::interface, {}
    struct foo<T, U,> where T: path::to::interface + path::to::interface, U: path::to::interface, {}
    struct foo {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T> {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T> where T: path::to::interface {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T> where T: path::to::interface, {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T> where T: path::to::interface + path::to::interface {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T> where T: path::to::interface + path::to::interface, {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T, U,> {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
    struct foo<T, U,> where T: path::to::interface, U: path::to::interface + path::to::interface, {
        field: path,
        field: path::subpath,
        field: path::subpath::subsubpath,
        field: path::subpath::subsubpath<generic_param>,
        field: path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: [path],
        field: [path::subpath],
        field: [path::subpath::subsubpath],
        field: [path::subpath::subsubpath<generic_param>],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath],
        field: [path; 0],
        field: [path::subpath; 0],
        field: [path::subpath::subsubpath; 0],
        field: [path::subpath::subsubpath<generic_param>; 0],
        field: [path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath; 0],
        field: fn(),
        field: fn() -> path,
        field: fn() -> path::subpath,
        field: fn() -> path::subpath::subsubpath,
        field: fn() -> path::subpath::subsubpath<generic_param>,
        field: fn() -> path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,
        field: fn(path),
        field: fn(path::subpath),
        field: fn(path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path),
        field: fn(path::subpath, path::subpath),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath),
        field: fn(path, path,),
        field: fn(path::subpath, path::subpath,),
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,),
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,),
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,),
        field: fn(path, path,) -> path,
        field: fn(path::subpath, path::subpath,) -> path,
        field: fn(path::subpath::subsubpath, path::subpath::subsubpath,) -> path,
        field: fn(path::subpath::subsubpath<generic_param>, path::subpath::subsubpath<generic_param>,) -> path,
        field: fn(path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath, path::subpath::subsubpath<generic_param::sub_param>::subsubsubpath,) -> path,
        field: fn(path, path,) -> fn() -> fn() -> fn(),
    }
";

    let ast = parse_module_for_test(CONTENT).await;
    assert_eq!(ast.items.len(), 17);

    for item in ast.items.iter() {
        match item.kind {
            ASTModuleItemKind::StructDef(_) => {}
            _ => panic!("expected struct module item"),
        }
    }
}
